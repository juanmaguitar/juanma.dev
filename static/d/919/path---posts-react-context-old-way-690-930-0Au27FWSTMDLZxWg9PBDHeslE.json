{"data":{"site":{"siteMetadata":{"title":"Blog by John Doe","subtitle":"Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu.","copyright":"© All rights reserved.","author":{"name":"John Doe","twitter":"#"},"disqusShortname":"","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"20c580f3-04f5-572c-9be0-a9b4a4b6cd1f","html":"<p>Table of Contents:\n[[toc]]</p>\n<hr>\n<br/>\n<p><em>Context</em> en React es una manera de crear un espacio de datos accesible por una <em>rama</em> del arbol de componentes de React</p>\n<p>En el manejo del contexto intervienen dos actores: El <em>Provider</em> y el <em>Consumer</em></p>\n<p>La manera de manejarlo ha cambiado desde la versión React 16.3. La manera legacy de manejar el contexto está documentada en React <a href=\"https://reactjs.org/docs/legacy-context.html\">aqui</a></p>\n<h2>Provider</h2>\n<p>En versiones anteriores a la 16.3 para definir el contexto que queremos propagar a hijos de un componente definimos en el <strong>Provider</strong> <code class=\"language-text\">childContextTypes</code> y <code class=\"language-text\">getChildContext</code>:</p>\n<ul>\n<li><code class=\"language-text\">childContextTypes</code>: propiedad <em>static</em>  donde declaramos la estructura del objeto contexto que será pasado a los hijos. Como <code class=\"language-text\">propTypes</code> pero obligario en este caso</li>\n<li><code class=\"language-text\">getChildContext</code>: métodp del prototipo que devuelve el objeto contexto que será pasado a los hijos en la jerarquia. Cada vez que cambie el <em>state</em>, o que el componente reciba nuevas <em>props</em> se llamará este metodo.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ContextProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> childContextTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    currentUser<span class=\"token punctuation\">:</span> React<span class=\"token punctuation\">.</span>PropTypes<span class=\"token punctuation\">.</span>object\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">getChildContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>currentUser<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>currentUser<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Consumer</h2>\n<p>Para acceder a esta información del contexto desde cualquier componente hijo Consumer podemos hacer…</p>\n<p>Desde un componente con clase ES6</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ContextConsumer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/*\n     contexTypes is a required static property to declare\n     what you want from the context\n  */</span>\n  <span class=\"token keyword\">static</span> contextTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      currentUser<span class=\"token punctuation\">:</span> React<span class=\"token punctuation\">.</span>PropTypes<span class=\"token punctuation\">.</span>object\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>currentUser<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>currentUser<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Desde un componente con clase ES6 con constructor propio</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ContextConsumer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> contextTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      currentUser<span class=\"token punctuation\">:</span> React<span class=\"token punctuation\">.</span>PropTypes<span class=\"token punctuation\">.</span>object\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>currentUser<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>currentUser<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Desde un componente funcional sin estado</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* Functional stateless component */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ContextConsumer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>context<span class=\"token punctuation\">.</span>currentUser<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nContextConsumer<span class=\"token punctuation\">.</span>contextTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  currentUser<span class=\"token punctuation\">:</span> React<span class=\"token punctuation\">.</span>PropTypes<span class=\"token punctuation\">.</span>object\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"tagSlugs":["/tags/react/","/tags/context/"]},"frontmatter":{"title":"Contexto en React (manera antigua, previa a React 16.3)","tags":["React","Context"],"date":"2018-10-31T22:12:03.284Z","description":"Contexto en React (manera antigua, previa a React 16.3)"}}},"pageContext":{"slug":"/posts/react-context-old-way"}}